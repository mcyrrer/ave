#! /usr/bin/python2

# Copyright (C) 2013 Sony Mobile Communications AB.
# All rights, including trade secret rights, reserved.

import os
import sys
import shutil
import re
import subprocess
import glob

def run(cmd):
    proc = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    out, err = proc.communicate()
    if proc.returncode:
        print(out)
        print(err)
        sys.exit(1)

if __name__ == '__main__':
    root = os.path.dirname(os.path.realpath(__file__))

    # clean out old staging material
    for entry in os.listdir(root + '/packaging'):
        if entry == 'DEBIAN':
            continue
        dst = root + '/packaging/' + entry
        if os.path.isfile(dst):
            os.unlink(dst)
        else:
            shutil.rmtree(dst)
    run(['make', '-C', root+'/src/libfdtx', 'clean'])

    # build libfdtx
    run(['make', '-C', root+'/src/libfdtx', 'libfdtx.so'])

    # copy other executables to /usr/bin
    src = glob.glob(root + '/bin/*')
    dst = root + '/packaging/usr/bin'
    if not os.path.exists(dst):
        os.makedirs(dst)
    for s in src:
        if s.endswith('aapt') or s.endswith('hprof-conv'):
            continue
        shutil.copy(s, dst)

    # copy modules and tests to /usr/lib/pymodules/ave
    for path in ['/', '/network/']:
        src = glob.glob(root + '/src/ave' + path + '*.py')
        # ... except __init__.py which has to be an empty file
        src = [s for s in src if os.path.basename(s) != '__init__.py']
        for dst in [
            root + '/packaging/usr/lib/pymodules/python2.6/ave' + path,
            root + '/packaging/usr/lib/pymodules/python2.7/ave' + path
        ]:
            if not os.path.exists(dst):
                os.makedirs(dst)
            for s in src:
                shutil.copy(s, dst)
            # create the empty __init__.py
            f = open(os.path.join(dst, '__init__.py'), 'w')
            f.close()

    # copy libfdtx to /usr/lib
    src = root + '/src/libfdtx/libfdtx.so'
    dst = root + '/packaging/usr/lib'
    if not os.path.exists(dst):
        os.makedirs(dst)
    shutil.copy(src, dst)

    # add search path to ave (fix for ubuntu 12).
    for subver in [6, 7]:
        path = root + '/packaging/usr/lib/python2.' + \
               str(subver) + '/dist-packages'
        if not os.path.exists(path):
            os.makedirs(path)
        with open(path + '/ave.pth', 'w') as text_file:
            text_file.write('/usr/lib/pymodules/python2.' + str(subver) + '\n')

    # extract version information from the package control file
    f = open(root + '/packaging/DEBIAN/control')
    version = None
    for line in f.readlines():
        m = re.match('Version:\s*(?P<version>.*)', line)
        if m:
            version = m.group('version')
            break
    if not version:
        print('ERROR: Could not find the version field in DEBIAN/control file')
        sys.exit(1)

    # generate the Debian package
    src = root + '/packaging'
    run(['fakeroot', 'dpkg-deb', '--build', src,
         '%s/ave-common-%s.deb' % (root, version)])
    print('created %s/ave-common-%s.deb' % (root, version))
